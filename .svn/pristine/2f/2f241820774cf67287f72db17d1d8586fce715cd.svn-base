package com.project.inswave.domain.user.controller;

import javax.annotation.Resource;

import org.json.JSONObject;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.inswave.elfw.annotation.ElDescription;
import com.inswave.elfw.annotation.ElService;
import com.inswave.elfw.annotation.ElValidator;
import com.inswave.elfw.log.AppLog;
import com.project.inswave.domain.user.SignUpService;
import com.project.inswave.domain.user.User;
import com.project.inswave.util.ApiUrlUtils;

import lombok.Getter;
import lombok.RequiredArgsConstructor;

@Controller //responseBody + controller
@ResponseBody
@Getter
@RequiredArgsConstructor
public class SignUpController {

	@Resource(name="SignUpService")
	private final SignUpService signUpService;
	
	@ElService(key = ApiUrlUtils.SIGNUP_NUM)    
	@RequestMapping(value = ApiUrlUtils.SIGNUP_NUM, method = RequestMethod.POST)
	@ElDescription(sub = "사번 중복 체크 화면", desc = "사번 중복 체크를 처리합니다.")
	@ElValidator(errUrl = "")    
	public String insNum(User user) throws Exception {

		AppLog.info("###################login_controller###################");
		AppLog.info("user : " + user.getInsNum() + " / " + user.getInsId());
	
		boolean exists = signUpService.existsByinsNum(user.getInsNum());
		AppLog.info("###########exists : " + exists);
		
		JSONObject json = new JSONObject();
		json.put("getInsPwd", "ssss");
		json.put("getInsName", "yujin");
		AppLog.info("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@here!!!!!!!!!!!!!!!!!!!!!!!!!!! : " + ResponseEntity.ok(json));
		AppLog.info("###########json type : " + json.getClass().getTypeName());
		AppLog.info("###########json value : " + json.getString("getInsPwd") + " / " + json.getString("getInsName"));
	    
		//return ResponseEntity.ok(item1);
		return json.toString();
	}
}
